<?xml version="1.0"?>
<project name="Part3"
         default="all"
         basedir="."
         xmlns:sonar="antlib:org.sonar.ant">
    <property name="src.dir" value="src" />
    <property name="lib.dir" value="libs" />
    <property name="build.dir" value="build" />
    <property name="test.dir" value="test" />
    <path id="lib.classpath">
        <fileset dir="../${lib.dir}">
            <include name="gridworld.jar" />
            <include name="junit-4.12.jar" />
            <include name="hamcrest-core-1.3.jar" />
        </fileset>
    </path>

    <!-- Define the Sonar properties -->
    <property name="sonar.projectKey" value="2015GridWorld.Part3" />
    <property name="sonar.projectName" value="Part3" />
    <property name="sonar.projectVersion" value="1.0" />
    <property name="sonar.language" value="java" />
    <property name="sonar.sources" value="${src.dir}" />
    <property name="sonar.binaries" value="${build.dir}" />
    <property name="sonar.sourceEncoding" value="UTF-8" />
    <!-- Define compelete -->

    <!-- ant的清理:
                 清理生成的目录及文件 -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${test.dir}" />
    </target>
    <!-- ant的生成:
                 生成所需目录 -->
    <target name="mkdir" depends="clean">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${test.dir}" />
    </target>
    <!-- ant的编译:
                 编译依赖于清理,以保证程序为最新
                 mkdir建立生成目录
                 javac任务指定源路径 目标路径 -->
    <target name="compile" depends="mkdir">
        <mkdir dir="${build.dir}" />
        <javac srcdir="${src.dir}" destdir="${build.dir}">
            <classpath refid="lib.classpath" />
        </javac>
    </target>
    <!-- ant的运行:
                 运行依赖于编译
                 使用fork避免UI的闪退
                 java任务指定classpath -->
    <target name="run" depends="compile">
        <java classname="JumperRunner" classpath="${build.dir}" fork="true">
            <classpath refid="lib.classpath" />
        </java>
    </target>

    <!-- ant的JUnit -->
    <target name="test.compile" depends="mkdir">
        <javac srcdir="${src.dir}" destdir="${test.dir}">
            <classpath refid="lib.classpath" />
        </javac>
    </target>
    <target name="test" depends="test.compile">
        <junit>
            <classpath refid="lib.classpath" />
            <classpath location="${test.dir}" />
            <formatter type="brief" usefile="false" />
            <test name="JumperTest" />
        </junit>
    </target>

    <!-- ========= Define Sonar target ========= -->
    <target name="sonar" depends="compile">
        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <!-- Update the following line,
                 or put the "sonar-ant-task-*.jar" file
                 in your "$HOME/.ant/lib" folder -->
            <classpath path="path/to/sonar/ant/task/lib/sonar-ant-task-*.jar" />
        </taskdef>
        <!-- Execute Sonar -->
        <sonar:sonar />
    </target>

    <target name="all" depends="run" />
</project>
